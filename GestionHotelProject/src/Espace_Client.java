

//import static ConnectionDB.getConnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

public class Espace_Client extends javax.swing.JFrame {

    private Object dateDebutR;
      
    public Espace_Client() {
        initComponents();
        jPAccueil.setVisible(true);
        jPReservation.setVisible(false);
        jPProfil.setVisible(false);
        displayChambre();
        //AfficheReservations();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPRight = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btnProfil = new javax.swing.JButton();
        btnAccueilClt = new javax.swing.JButton();
        nomPrenClt = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        idUser = new javax.swing.JLabel();
        btnReservationClt = new javax.swing.JButton();
        jPReservation = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTReservation = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        cbType = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTChambre = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        dateFinRes = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        numCh = new javax.swing.JLabel();
        typeCh = new javax.swing.JLabel();
        dureeRes = new javax.swing.JTextField();
        nuitieCh = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        montRes = new javax.swing.JLabel();
        jDateDebutR = new com.toedter.calendar.JDateChooser();
        btnCreeRes = new javax.swing.JButton();
        btnCreeRes1 = new javax.swing.JButton();
        jPProfil = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        mpUser = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        mpUs = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        cinC1 = new javax.swing.JLabel();
        nomC = new javax.swing.JLabel();
        prenomC = new javax.swing.JLabel();
        adresseC = new javax.swing.JLabel();
        telC = new javax.swing.JLabel();
        genreC = new javax.swing.JLabel();
        nomUs = new javax.swing.JLabel();
        jPAccueil = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        Template = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gestion de réservation des chambres  | Espace Client");
        getContentPane().setLayout(null);

        jPRight.setBackground(new java.awt.Color(0, 102, 102));
        jPRight.setLayout(null);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Client");
        jPRight.add(jLabel2);
        jLabel2.setBounds(30, 120, 220, 20);

        btnProfil.setBackground(new java.awt.Color(0, 102, 102));
        btnProfil.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        btnProfil.setForeground(new java.awt.Color(255, 255, 255));
        btnProfil.setText("MON PROFIL");
        btnProfil.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        btnProfil.setBorderPainted(false);
        btnProfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProfilActionPerformed(evt);
            }
        });
        jPRight.add(btnProfil);
        btnProfil.setBounds(20, 390, 240, 50);

        btnAccueilClt.setBackground(new java.awt.Color(0, 102, 102));
        btnAccueilClt.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        btnAccueilClt.setForeground(new java.awt.Color(255, 255, 255));
        btnAccueilClt.setText("ACCUEIL");
        btnAccueilClt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        btnAccueilClt.setBorderPainted(false);
        btnAccueilClt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAccueilCltActionPerformed(evt);
            }
        });
        jPRight.add(btnAccueilClt);
        btnAccueilClt.setBounds(20, 290, 240, 50);

        nomPrenClt.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        nomPrenClt.setForeground(new java.awt.Color(255, 255, 255));
        nomPrenClt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nomPrenClt.setText("jLabel2");
        jPRight.add(nomPrenClt);
        nomPrenClt.setBounds(20, 160, 230, 20);

        jButton2.setBackground(new java.awt.Color(255, 0, 0));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Déconnexion");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPRight.add(jButton2);
        jButton2.setBounds(70, 640, 120, 40);

        idUser.setBackground(new java.awt.Color(0, 102, 102));
        idUser.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        idUser.setForeground(new java.awt.Color(255, 255, 255));
        idUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idUser.setText("jLabel2");
        jPRight.add(idUser);
        idUser.setBounds(20, 190, 230, 20);

        btnReservationClt.setBackground(new java.awt.Color(0, 102, 102));
        btnReservationClt.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        btnReservationClt.setForeground(new java.awt.Color(255, 255, 255));
        btnReservationClt.setText("RESERVATIONS");
        btnReservationClt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        btnReservationClt.setBorderPainted(false);
        btnReservationClt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReservationCltActionPerformed(evt);
            }
        });
        jPRight.add(btnReservationClt);
        btnReservationClt.setBounds(20, 340, 240, 50);

        getContentPane().add(jPRight);
        jPRight.setBounds(0, 0, 280, 730);

        jPReservation.setBackground(new java.awt.Color(255, 255, 255));
        jPReservation.setLayout(null);

        jPanel3.setBackground(new java.awt.Color(0, 102, 102));
        jPanel3.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Réservation");
        jPanel3.add(jLabel1);
        jLabel1.setBounds(40, 10, 190, 16);

        jPReservation.add(jPanel3);
        jPanel3.setBounds(110, 20, 960, 40);

        jTReservation.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTReservation);

        jPReservation.add(jScrollPane1);
        jScrollPane1.setBounds(100, 480, 950, 180);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Mon historique de réservations");
        jPReservation.add(jLabel3);
        jLabel3.setBounds(100, 450, 230, 17);

        cbType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--- Choisir un type ---", "single", "double", "family", "suite" }));
        cbType.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cbTypePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        cbType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTypeActionPerformed(evt);
            }
        });
        jPReservation.add(cbType);
        cbType.setBounds(520, 70, 190, 30);

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setText("* Pour annuler une réservation veuillez sélectionner sur une réservation parmi la liste de votre historique de réservations");
        jPReservation.add(jLabel4);
        jLabel4.setBounds(90, 670, 710, 20);

        jLabel6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel6.setText("Par Type :");
        jPReservation.add(jLabel6);
        jLabel6.setBounds(450, 76, 60, 20);

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setText("Liste des chambres disponibles");
        jPReservation.add(jLabel8);
        jLabel8.setBounds(120, 80, 230, 17);

        jTChambre.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTChambre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTChambreMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTChambre);

        jPReservation.add(jScrollPane2);
        jScrollPane2.setBounds(110, 110, 940, 110);

        jPanel4.setBackground(new java.awt.Color(229, 229, 224));
        jPanel4.setLayout(null);

        jLabel9.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel9.setText("Montant à payer :");
        jPanel4.add(jLabel9);
        jLabel9.setBounds(40, 120, 100, 16);

        jLabel11.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel11.setText("Durée :");
        jPanel4.add(jLabel11);
        jLabel11.setBounds(330, 60, 60, 30);

        dateFinRes.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        dateFinRes.setText("|");
        jPanel4.add(dateFinRes);
        dateFinRes.setBounds(450, 100, 180, 20);

        jLabel13.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel13.setText("N° Chambre  :");
        jPanel4.add(jLabel13);
        jLabel13.setBounds(40, 30, 90, 14);

        jLabel14.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel14.setText("Date fin  :");
        jPanel4.add(jLabel14);
        jLabel14.setBounds(330, 100, 100, 14);

        jLabel15.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel15.setText("Date début  :");
        jPanel4.add(jLabel15);
        jLabel15.setBounds(330, 30, 100, 20);

        jLabel16.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel16.setText("Type :");
        jPanel4.add(jLabel16);
        jLabel16.setBounds(40, 60, 70, 16);

        numCh.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        numCh.setText("|");
        jPanel4.add(numCh);
        numCh.setBounds(160, 30, 140, 20);

        typeCh.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        typeCh.setText("|");
        jPanel4.add(typeCh);
        typeCh.setBounds(160, 60, 140, 20);

        dureeRes.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        dureeRes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dureeResKeyPressed(evt);
            }
        });
        jPanel4.add(dureeRes);
        dureeRes.setBounds(450, 60, 180, 30);

        nuitieCh.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        nuitieCh.setText("|");
        jPanel4.add(nuitieCh);
        nuitieCh.setBounds(160, 90, 140, 20);

        jLabel10.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel10.setText("Nuitié :");
        jPanel4.add(jLabel10);
        jLabel10.setBounds(40, 90, 70, 16);

        montRes.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        montRes.setText("|");
        jPanel4.add(montRes);
        montRes.setBounds(160, 120, 140, 20);

        jDateDebutR.setDateFormatString("dd/MM/yyyy");
        jPanel4.add(jDateDebutR);
        jDateDebutR.setBounds(450, 22, 180, 30);

        jPReservation.add(jPanel4);
        jPanel4.setBounds(110, 260, 730, 160);

        btnCreeRes.setBackground(new java.awt.Color(204, 51, 0));
        btnCreeRes.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnCreeRes.setForeground(new java.awt.Color(255, 255, 255));
        btnCreeRes.setText("Annuler");
        btnCreeRes.setName("btnInscription"); // NOI18N
        btnCreeRes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreeResActionPerformed(evt);
            }
        });
        jPReservation.add(btnCreeRes);
        btnCreeRes.setBounds(860, 310, 150, 40);

        btnCreeRes1.setBackground(new java.awt.Color(51, 153, 0));
        btnCreeRes1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnCreeRes1.setForeground(new java.awt.Color(255, 255, 255));
        btnCreeRes1.setText("Créer");
        btnCreeRes1.setName("btnInscription"); // NOI18N
        btnCreeRes1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreeRes1ActionPerformed(evt);
            }
        });
        jPReservation.add(btnCreeRes1);
        btnCreeRes1.setBounds(860, 260, 150, 40);

        getContentPane().add(jPReservation);
        jPReservation.setBounds(280, 0, 1070, 730);

        jPProfil.setBackground(new java.awt.Color(255, 255, 255));
        jPProfil.setLayout(null);

        jPanel5.setBackground(new java.awt.Color(0, 102, 102));
        jPanel5.setLayout(null);

        jLabel5.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Mon Profil");
        jPanel5.add(jLabel5);
        jLabel5.setBounds(40, 10, 190, 16);

        jPProfil.add(jPanel5);
        jPanel5.setBounds(110, 20, 960, 40);

        mpUser.setFont(new java.awt.Font("Segoe UI Emoji", 0, 18)); // NOI18N
        mpUser.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        mpUser.setText("|");
        jPProfil.add(mpUser);
        mpUser.setBounds(740, 150, 250, 21);

        jLabel17.setFont(new java.awt.Font("Segoe UI Emoji", 1, 18)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("NOM:");
        jPProfil.add(jLabel17);
        jLabel17.setBounds(130, 150, 49, 21);

        jLabel18.setFont(new java.awt.Font("Segoe UI Emoji", 1, 18)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText("PRENOM:");
        jPProfil.add(jLabel18);
        jLabel18.setBounds(130, 190, 81, 21);

        jLabel19.setFont(new java.awt.Font("Segoe UI Emoji", 1, 18)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel19.setText("ADRESSE:");
        jPProfil.add(jLabel19);
        jLabel19.setBounds(130, 230, 83, 21);

        jLabel20.setFont(new java.awt.Font("Segoe UI Emoji", 1, 18)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel20.setText("TELEPHONE:");
        jPProfil.add(jLabel20);
        jLabel20.setBounds(130, 270, 120, 21);

        mpUs.setFont(new java.awt.Font("Segoe UI Emoji", 1, 18)); // NOI18N
        mpUs.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        mpUs.setText("MOT DE PASSE:");
        jPProfil.add(mpUs);
        mpUs.setBounds(550, 150, 132, 21);

        jLabel23.setFont(new java.awt.Font("Segoe UI Emoji", 1, 18)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel23.setText("NOM D'UTILISATEUR:");
        jPProfil.add(jLabel23);
        jLabel23.setBounds(550, 110, 181, 21);

        jLabel24.setFont(new java.awt.Font("Segoe UI Emoji", 1, 18)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel24.setText("GENRE:");
        jPProfil.add(jLabel24);
        jLabel24.setBounds(130, 310, 61, 21);

        jLabel21.setFont(new java.awt.Font("Segoe UI Emoji", 1, 18)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel21.setText("CIN:");
        jPProfil.add(jLabel21);
        jLabel21.setBounds(130, 110, 40, 21);

        cinC1.setFont(new java.awt.Font("Segoe UI Emoji", 0, 18)); // NOI18N
        cinC1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        cinC1.setText("|");
        jPProfil.add(cinC1);
        cinC1.setBounds(270, 110, 250, 21);

        nomC.setFont(new java.awt.Font("Segoe UI Emoji", 0, 18)); // NOI18N
        nomC.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        nomC.setText("|");
        jPProfil.add(nomC);
        nomC.setBounds(270, 150, 250, 21);

        prenomC.setFont(new java.awt.Font("Segoe UI Emoji", 0, 18)); // NOI18N
        prenomC.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        prenomC.setText("|");
        jPProfil.add(prenomC);
        prenomC.setBounds(270, 190, 250, 21);

        adresseC.setFont(new java.awt.Font("Segoe UI Emoji", 0, 18)); // NOI18N
        adresseC.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        adresseC.setText("|");
        jPProfil.add(adresseC);
        adresseC.setBounds(270, 230, 250, 21);

        telC.setFont(new java.awt.Font("Segoe UI Emoji", 0, 18)); // NOI18N
        telC.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        telC.setText("|");
        jPProfil.add(telC);
        telC.setBounds(270, 270, 250, 21);

        genreC.setFont(new java.awt.Font("Segoe UI Emoji", 0, 18)); // NOI18N
        genreC.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        genreC.setText("|");
        jPProfil.add(genreC);
        genreC.setBounds(270, 310, 250, 21);

        nomUs.setFont(new java.awt.Font("Segoe UI Emoji", 0, 18)); // NOI18N
        nomUs.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        nomUs.setText("|");
        jPProfil.add(nomUs);
        nomUs.setBounds(740, 110, 250, 21);

        getContentPane().add(jPProfil);
        jPProfil.setBounds(280, 0, 1070, 730);

        jPAccueil.setBackground(new java.awt.Color(255, 255, 255));
        jPAccueil.setLayout(null);

        jLabel12.setBackground(new java.awt.Color(0, 102, 102));
        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel12.setText("                                         Bienvenue");
        jPAccueil.add(jLabel12);
        jLabel12.setBounds(130, 30, 580, 40);

        Template.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/hotel-royal-azur-thalassa.jpg"))); // NOI18N
        jPAccueil.add(Template);
        Template.setBounds(10, 100, 1050, 620);

        getContentPane().add(jPAccueil);
        jPAccueil.setBounds(280, 0, 1070, 730);

        setSize(new java.awt.Dimension(1366, 738));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void dureeResKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dureeResKeyPressed
        // TODO add your handling code here:
        displayDatFinRes();
        calculMontA();
    }//GEN-LAST:event_dureeResKeyPressed

    private void btnCreeResActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreeResActionPerformed
        // TODO add your handling code here:

        if (testChamp()) {
            try {
                PreparedStatement ps;
                String sql ="insert into reservation(dateDebut, duree, dateFin, etat, numch, idclt) VALUES(?,?,?,?,?,?,?,?,?)";
                ps= ConnectionDB.getConnection().prepareStatement(sql);
                SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
                String addDate = dateFormat.format(jDateDebutR.getDate());
            
                ps.setString(1, addDate);
                ps.setInt(2, Integer.parseInt(dureeRes.getText()));
                ps.setString(3, dateFinRes.getText());
                ps.setString(4, "En attente");
                ps.setInt(5, Integer.parseInt(dureeRes.getText()));
                ps.setInt(6, Integer.parseInt(dureeRes.getText()));
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Vous etes inscris avec succès");

            } catch (Exception ex) {

                JOptionPane.showMessageDialog(null, "Champ de saisie invalide", "Erreurs de saisie", JOptionPane.ERROR_MESSAGE);

            }
        } else {
            JOptionPane.showMessageDialog(null, "Un ou plusieurs champs obligatoitre  vide(s)", "Champ(s) obligatoire(s)", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCreeResActionPerformed

    public void displayFieldsProfil()
{
   
   try{
       int iuser = Integer.parseInt(idUser.getText());
       String query = "SELECT * FROM user where cin = '" + iuser + "'";
       ps= ConnectionDB.getConnection().prepareStatement(query);
       ResultSet rs;
         rs=ps.executeQuery(query);
      
      
         if(rs.next())
         {
                cinC1.setText(rs.getString(1));
                nomC.setText(rs.getString(3));
                prenomC.setText(rs.getString(4));
                adresseC.setText(rs.getString(6));
                telC.setText(rs.getString(5));
                genreC.setText(rs.getString(9));
                nomUs.setText(rs.getString(7));
                mpUser.setText(rs.getString(8));
               
         }
         else
         {
               //lmes.setText("| Aucun résultat trouvé");
         }
   } catch(SQLException ex){
       //lmes.setText("| Aucun résultat trouvé");
       ex.printStackTrace();
   
   }
}  
    private void btnCreeRes1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreeRes1ActionPerformed
        // TODO add your handling code here:
        if (testChamp()) {
            if (verifDtat()) {
                try {
                    
                    PreparedStatement ps;
                    String sql ="INSERT INTO reservation(id_client, num_chambre, datedeb, datefin) VALUES(?,?,?,?)";
                    ps= ConnectionDB.getConnection().prepareStatement(sql);
                    ps.setInt(1, Integer.parseInt(idUser.getText()));
                    ps.setInt(2, Integer.parseInt(numCh.getText()));
                    SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
                    String addDate = dateFormat.format(jDateDebutR.getDate());
                    ps.setString(3, addDate);
                    ps.setString(4, dateFinRes.getText());
                    ps.executeUpdate();
                    AfficheReservations();
                    JOptionPane.showMessageDialog(null, "Une réservation  est crée avec succès");
                    PreparedStatement ps1;
                    String sql1 ="update chambre set etat=? where numero like ?";
                    ps1= ConnectionDB.getConnection().prepareStatement(sql1);
                    ps1.setString(1, "reserved");
                    ps1.setString(2, numCh.getText());
                    ps1.executeUpdate();

                } catch (Exception ex) {

                    JOptionPane.showMessageDialog(null, "Champ de saisie invalide", "Erreurs de saisie", JOptionPane.ERROR_MESSAGE);
                    ex.printStackTrace();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Date de début de contrat est invalide", "Date début contrat erronée", JOptionPane.ERROR_MESSAGE);

            }
        } else {
            JOptionPane.showMessageDialog(null, "Un ou plusieurs champs obligatoitre  vide(s)", "Champ(s) obligatoire(s)", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_btnCreeRes1ActionPerformed

    private void cbTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbTypeActionPerformed

    private void cbTypePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cbTypePopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        displayChambreByType();
    }//GEN-LAST:event_cbTypePopupMenuWillBecomeInvisible

    private void jTChambreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTChambreMouseClicked
        // TODO add your handling code here:
        // get the model from the jtable
        DefaultTableModel model = (DefaultTableModel) jTChambre.getModel();

        // get the selected row index
        int selectedRowIndex = jTChambre.getSelectedRow();

        // set the selected row data into jtextfields
        numCh.setText(model.getValueAt(selectedRowIndex, 0).toString());
        typeCh.setText(model.getValueAt(selectedRowIndex, 1).toString());
        nuitieCh.setText(model.getValueAt(selectedRowIndex, 2).toString());
    }//GEN-LAST:event_jTChambreMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        login a = new login();
        a.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnAccueilCltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAccueilCltActionPerformed
        // TODO add your handling code here:
        jPAccueil.setVisible(true);
        jPReservation.setVisible(false);
        jPProfil.setVisible(false);
    }//GEN-LAST:event_btnAccueilCltActionPerformed

    private void btnReservationCltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReservationCltActionPerformed
        // TODO add your handling code here:
        jPAccueil.setVisible(false);
        jPReservation.setVisible(true);
        jPProfil.setVisible(false);
    }//GEN-LAST:event_btnReservationCltActionPerformed

    private void btnProfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProfilActionPerformed
        // TODO add your handling code here:
        jPAccueil.setVisible(false);
        jPReservation.setVisible(false);
        displayFieldsProfil();
        jPProfil.setVisible(true);
    }//GEN-LAST:event_btnProfilActionPerformed
    public void displayChambre() {

        try {
            PreparedStatement ps;
            String sql ="select chambre.numero, chambre.type, chambre.prix from chambre where etat ='free'";
            ps= ConnectionDB.getConnection().prepareStatement(sql);
            String d = "Disponible";
            rs = ps.executeQuery();
            jTChambre.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException ex) {
            Logger.getLogger(Espace_Client.class.getName()).log(Level.SEVERE, null, ex);
            ex.printStackTrace();
        }
    }

    public boolean testChamp() {
        if (dureeRes.getText() == null) {
            return false;
        }
        return true;
    }

    private boolean verifDtat() {
        Calendar c = Calendar.getInstance();
        Date datd = jDateDebutR.getDate();
        Date sd = c.getTime();
        if (datd.before(sd)) {
            return false;

        } else {
            return true;
        }
    }

    public void AfficheReservations() {
        try {
            Connection con = ConnectionDB.getConnection();
            int ec = Integer.parseInt(idUser.getText());
            String sql = "select* from reservation where  id_client = '" + ec + "'";
            PreparedStatement pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            jTReservation.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException ex) {
            ex.printStackTrace();
        }

    }

    public void displayDatFinRes() {
        int nbj = Integer.parseInt(dureeRes.getText());
        DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
        Date dateDebut = jDateDebutR.getDate(); // Obtenez la date de début

        Calendar c = Calendar.getInstance();
        c.setTime(dateDebut); // Définir la date de début sur le calendrier
        c.add(Calendar.DATE, nbj); // Ajouter nbj jours à la date de début
        Date futureDate = c.getTime(); // Obtenir la date future

        dateFinRes.setText(df.format(futureDate)); // Définir la date future formatée comme le texte de dateFinRes
    }

    public void displayChambreByType() {

        try {
            String tc = cbType.getSelectedItem().toString();
            Connection con = ConnectionDB.getConnection();
            String sql = "select* from chambre where etat ='reserved' and type like '" + tc + "'";
            PreparedStatement pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            jTChambre.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException ex) {
            Logger.getLogger(Espace_Client.class.getName()).log(Level.SEVERE, null, ex);
            ex.printStackTrace();
        }
    }

    public void calculMontA() {
        double ma;
        ma = Double.parseDouble(nuitieCh.getText()) * Integer.parseInt(dureeRes.getText());

        montRes.setText(String.valueOf(ma));
    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel Template;
    public javax.swing.JLabel adresseC;
    public javax.swing.JButton btnAccueilClt;
    public javax.swing.JButton btnCreeRes;
    public javax.swing.JButton btnCreeRes1;
    public javax.swing.JButton btnProfil;
    public javax.swing.JButton btnReservationClt;
    public javax.swing.JComboBox<String> cbType;
    public javax.swing.JLabel cinC1;
    public javax.swing.JLabel dateFinRes;
    public javax.swing.JTextField dureeRes;
    public javax.swing.JLabel genreC;
    public javax.swing.JLabel idUser;
    public javax.swing.JButton jButton2;
    public com.toedter.calendar.JDateChooser jDateDebutR;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel10;
    public javax.swing.JLabel jLabel11;
    public javax.swing.JLabel jLabel12;
    public javax.swing.JLabel jLabel13;
    public javax.swing.JLabel jLabel14;
    public javax.swing.JLabel jLabel15;
    public javax.swing.JLabel jLabel16;
    public javax.swing.JLabel jLabel17;
    public javax.swing.JLabel jLabel18;
    public javax.swing.JLabel jLabel19;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel20;
    public javax.swing.JLabel jLabel21;
    public javax.swing.JLabel jLabel23;
    public javax.swing.JLabel jLabel24;
    public javax.swing.JLabel jLabel3;
    public javax.swing.JLabel jLabel4;
    public javax.swing.JLabel jLabel5;
    public javax.swing.JLabel jLabel6;
    public javax.swing.JLabel jLabel8;
    public javax.swing.JLabel jLabel9;
    public javax.swing.JPanel jPAccueil;
    public javax.swing.JPanel jPProfil;
    public javax.swing.JPanel jPReservation;
    public javax.swing.JPanel jPRight;
    public javax.swing.JPanel jPanel3;
    public javax.swing.JPanel jPanel4;
    public javax.swing.JPanel jPanel5;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JTable jTChambre;
    public javax.swing.JTable jTReservation;
    public javax.swing.JLabel montRes;
    public javax.swing.JLabel mpUs;
    public javax.swing.JLabel mpUser;
    public javax.swing.JLabel nomC;
    public javax.swing.JLabel nomPrenClt;
    public javax.swing.JLabel nomUs;
    public javax.swing.JLabel nuitieCh;
    public javax.swing.JLabel numCh;
    public javax.swing.JLabel prenomC;
    public javax.swing.JLabel telC;
    public javax.swing.JLabel typeCh;
    // End of variables declaration//GEN-END:variables
String imgPath = null;
    String filename = null;
    byte[] person_image = null;
    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement ps = null;
    int pos;
}
